enum tier {
  free_trial [note: 'Free Trial tier will get their infras data wiped after 30 days']
  bronze
  silver
  gold
  platinum [note: 'Platinum tier will get their own dedicated infra']
}

Table tenants {
  id UUID [pk]
  name varchar(255)
  domain varchar(255)
  tier tier
  infra_id UUID [ref: > tenant_infras.id]

  created_at timestamp
  updated_at timestamp
}

Table users {
  id UUID [pk]

  created_at timestamp
  updated_at timestamp
}

Table tenant_users {
  tenant_id UUID [ref: > tenants.id]
  user_id UUID [ref: > users.id]

  created_at timestamp
  updated_at timestamp

  indexes {
    (user_id, tenant_id) [pk]
  }
}

Table tenant_infras {
  id UUID [pk]
  name varchar(255)
  kafka_brokers "varchar(255)[]"
  schema_registry_url varchar(255)
  kafka_connect_url varchar(255)
  kms_key varchar(255)

  created_at timestamp
  updated_at timestamp
}

Table tags {
  id UUID [pk]
  tenant_id UUID [ref: > tenants.id]
  key varchar(255)
  value varchar(255)

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp
}

enum source_engine {
  mysql
  postgresql
}

Table sources {
  id UUID [pk]
  tenant_id UUID [ref: > tenants.id]
  name varchar(255)
  engine source_engine

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp
}

Table source_tags {
  source_id UUID [ref: > sources.id]
  tag_id UUID [ref: > tags.id]

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (source_id, tag_id) [pk]
  }
}

Table source_configs {
  source_id UUID [ref: > sources.id]
  key varchar(255)
  value varchar(255) [null]

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (source_id, key) [pk]
  }
}

Table source_tables {
  id UUID [pk]
  source_id UUID [ref: > sources.id]
  db_name varchar(255)
  schema_name varchar(255)
  table_name varchar(255)

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (source_id, db_name, schema_name, table_name) [unique]
  }
}

Table source_table_columns {
  table_id UUID [ref: > source_tables.id]
  column_name varchar(255)
  data_type varchar(255)

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (table_id, column_name) [pk]
  }
}

enum destination_engine {
  mysql
  postgresql
}

Table destinations {
  id UUID [pk]
  tenant_id UUID [ref: > tenants.id]
  name varchar(255)
  engine destination_engine

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp
}

Table destination_tags {
  destination_id UUID [ref: > destinations.id]
  tag_id UUID [ref: > tags.id]

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (destination_id, tag_id) [pk]
  }
}

Table destination_configs {
  destination_id UUID [ref: > destinations.id]
  key varchar(255)
  value varchar(255) [null]

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (destination_id, key) [pk]
  }
}

Table pipelines {
  id UUID [pk]
  tenant_id UUID [ref: > tenants.id]
  source_id UUID [ref: > sources.id]
  destination_id UUID [ref: > destinations.id]
  name varchar(255)
  
  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp
}

Table pipeline_tags {
  pipeline_id UUID [ref: > pipelines.id]
  tag_id UUID [ref: > tags.id]

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (pipeline_id, tag_id) [pk]
  }
}

Table pipeline_configs {
  pipeline_id UUID [ref: > pipelines.id]
  key varchar(255)
  value varchar(255) [null]

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (pipeline_id, key) [pk]
  }
}

Table pipeline_source_tables {
  pipeline_id UUID [ref: > pipelines.id]
  table_id UUID [ref: > source_tables.id]

  created_by_user_id UUID [ref: > users.id]
  updated_by_user_id UUID [ref: > users.id]
  created_at timestamp
  updated_at timestamp

  indexes {
    (pipeline_id, table_id) [pk]
  }
}
